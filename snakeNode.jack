// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Square/Square.jack

/** Implements a graphical square. */
class snakeNode {

   field int x, y; // screen location of the square's top-left corner
   field snakeNode next;
   field snakeNode prev;
   field int size;

   /** Constructs a new square with a given location and size. */
   constructor snakeNode new(int Ax, int Ay, int Asize) {
      let x = Ax;
      let y = Ay;
      let size = Asize;
      let next = this;
      let prev =this;
      do draw();
      return this;
   }

   /** get x value. */
   method int getX() {
      return x;
   }

   /** get y value. */
   method int getY() {
      return y;
   }

   /** set prev value. */
   method void setPrev(snakeNode Anode) {
      let prev = Anode;
      return;
   }

  /** set next value. */
   method void setNext(snakeNode Anode) {
      let next = Anode;
      return;
   }
    /** get next value. */
   method snakeNode getNext() {
      return next;
   }

   /** get prev value. */
   method snakeNode getPrev() {
      return prev;
   }

   /** Disposes this square. */
   method void dispose() {
      do erase();
      do Memory.deAlloc(this);
      return;
   }

   /** Draws the square on the screen. */
   method void draw() {
      do Screen.setColor(true);
      if (x < 0){let x = 460 ;}
      if (y < 0){let y = 220;}
      if (x = 480){let x = 0;}
      if (y = 240){let y =  0;}
      
      if (y < 240){
         if (x < 480){
               do Screen.drawRectangle(x, y, x + size, y + size);
         }
      }
      return;
   }

   /** Erases the square from the screen. */
   method void erase() {
      do Screen.setColor(false);
      if (y < 240){
         if (x < 480){
            do Screen.drawRectangle(x, y, x + size, y + size);

         }
      }
      return;
   }

 




}
